/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mega.demineur_maugeais_lonegro_gouin;

/**
 *
 * @author doria
 */
public class fenêtre_interface extends javax.swing.JFrame {

    Grille plateau_vie;
    int nbkit = 0;
    /**
     * Creates new form fenêtre_interface
     */
    public fenêtre_interface() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inter_déminage = new javax.swing.JPanel();
        Infos_joueur = new javax.swing.JPanel();
        txt_Joueur = new javax.swing.JLabel();
        txt_Vies = new javax.swing.JLabel();
        txt_Nbkits = new javax.swing.JLabel();
        nb_Kits = new javax.swing.JLabel();
        infos_Jeu = new javax.swing.JPanel();
        infosJeu_Title = new javax.swing.JLabel();
        txt_NbMines = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        message = new javax.swing.JTextArea();
        nb_Mines = new javax.swing.JLabel();
        infosJoueur_Title = new javax.swing.JLabel();
        txt_Taille = new javax.swing.JLabel();
        nom_joueur1 = new javax.swing.JTextField();
        affichage_vie = new javax.swing.JPanel();
        niveau2 = new javax.swing.JButton();
        niveau1 = new javax.swing.JButton();
        niveau3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inter_déminage.setBackground(new java.awt.Color(102, 102, 0));
        inter_déminage.setLayout(new java.awt.GridLayout(6, 17));
        getContentPane().add(inter_déminage, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 1088, 384));

        Infos_joueur.setBackground(new java.awt.Color(255, 255, 255));

        txt_Joueur.setText("Joueur :");

        txt_Vies.setText("Nombre de Goku prêts à se sacrifier (vies) :");

        txt_Nbkits.setText("Nombre de kits de déminage :");

        nb_Kits.setText("0");

        infos_Jeu.setBackground(new java.awt.Color(255, 204, 204));

        infosJeu_Title.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        infosJeu_Title.setText("INFOS JEU");

        txt_NbMines.setText("Nombre de mines présentes : ");

        message.setColumns(20);
        message.setRows(5);
        jScrollPane1.setViewportView(message);

        nb_Mines.setText("0");

        javax.swing.GroupLayout infos_JeuLayout = new javax.swing.GroupLayout(infos_Jeu);
        infos_Jeu.setLayout(infos_JeuLayout);
        infos_JeuLayout.setHorizontalGroup(
            infos_JeuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infos_JeuLayout.createSequentialGroup()
                .addGroup(infos_JeuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infosJeu_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(infos_JeuLayout.createSequentialGroup()
                        .addComponent(txt_NbMines)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nb_Mines, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        infos_JeuLayout.setVerticalGroup(
            infos_JeuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infos_JeuLayout.createSequentialGroup()
                .addComponent(infosJeu_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(infos_JeuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nb_Mines, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_NbMines))
                .addGap(48, 48, 48))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infos_JeuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        infosJoueur_Title.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        infosJoueur_Title.setText("INFOS JOUEURS");

        txt_Taille.setText("Difficulté (Taille 1,2,3) :");

        nom_joueur1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nom_joueur1ActionPerformed(evt);
            }
        });

        affichage_vie.setLayout(new java.awt.GridLayout(1, 3));

        niveau2.setText("2");
        niveau2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                niveau2ActionPerformed(evt);
            }
        });

        niveau1.setText("1");
        niveau1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                niveau1ActionPerformed(evt);
            }
        });

        niveau3.setText("3");
        niveau3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                niveau3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Infos_joueurLayout = new javax.swing.GroupLayout(Infos_joueur);
        Infos_joueur.setLayout(Infos_joueurLayout);
        Infos_joueurLayout.setHorizontalGroup(
            Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Infos_joueurLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Infos_joueurLayout.createSequentialGroup()
                        .addComponent(txt_Nbkits, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(nb_Kits, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Infos_joueurLayout.createSequentialGroup()
                        .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(infosJoueur_Title)
                                .addComponent(txt_Joueur, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_Vies, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nom_joueur1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(affichage_vie, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_Taille)
                    .addComponent(niveau2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(niveau1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(niveau3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(infos_Jeu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        Infos_joueurLayout.setVerticalGroup(
            Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Infos_joueurLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(infos_Jeu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Infos_joueurLayout.createSequentialGroup()
                        .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Infos_joueurLayout.createSequentialGroup()
                                .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Infos_joueurLayout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txt_Joueur)
                                            .addComponent(nom_joueur1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(niveau3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Infos_joueurLayout.createSequentialGroup()
                                        .addComponent(niveau2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(niveau1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(affichage_vie, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Infos_joueurLayout.createSequentialGroup()
                                            .addComponent(txt_Vies)
                                            .addGap(16, 16, 16)))))
                            .addGroup(Infos_joueurLayout.createSequentialGroup()
                                .addComponent(infosJoueur_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)))
                        .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Infos_joueurLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addComponent(txt_Taille))
                            .addGroup(Infos_joueurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_Nbkits)
                                .addComponent(nb_Kits)))))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        getContentPane().add(Infos_joueur, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 1350, 220));

        setBounds(0, 0, 1568, 728);
    }// </editor-fold>//GEN-END:initComponents

    private void nom_joueur1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nom_joueur1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_nom_joueur1ActionPerformed

    private void niveau1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_niveau1ActionPerformed
        // TODO add your handling code here:

        initComponents();

        // On a recopié le code pour 3 difficultés différentes ici mode facile
        //partie affiche le nombre de vie
        plateau_vie = new Grille(1, 3);//on creer un plateau_vie qui sert à placer les images de vie comme on a trois vie on creer une grille de 1 ligne et 3 colonne
        for (int i = 0; i < 3; i++) {//boucle pour placer les images dans le bon panel 
            Cellule_Graphique CellVie = new Cellule_Graphique(plateau_vie.grille[0][i]);
            affichage_vie.add(CellVie);
        }
        affichage_vie.repaint();

        int l = 4;
        int c = 14;

        Grille plateau = new Grille(l, c);  //on créer un plateau de l ligne et c colonne 
        placerBombes(plateau, l, c);  //ensuite on place les bombes
        placerKits(plateau, l, c);  //puis les kits 
        inter_déminage.setLayout(new java.awt.GridLayout(l, c));  //on modifie le grid layout du panel où se situe les boutons 

        for (int i = l - 1; i >= 0; i--) {//même principe que le plateau de vie mais avec deux boucle car le nombre de vie est variable 
            for (int j = 0; j < c; j++) {

                plateau.grille[i][j].supprimervie();  // on supprime les vies qui sont dans les cases pour pouvoir avoir l'affichage voulu 
                Cellule_Graphique CellGraph = new Cellule_Graphique(plateau.grille[i][j]);
                int ligne = i; // on pose notre nombre de ligne dans une variable
                int colonne = j;  // idem pour les colonnes 
                
                //Partie du code qui servira à faire des actions avec les boutons de la grille 
                CellGraph.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        Cellule o = CellGraph.CelluleAssociee;  // on créer une variable o qui servira de receptacle lorsque l'on cliquera sur un bouton
                        int avoirnbkit = Integer.parseInt(nb_Kits.getText());// on met le nombre de kit que le joueur possède dans une variable  
                        if (avoirnbkit != 0) {  // si on a des kits
                            for (int k = 2; k >= 0; k--) {
                                if (plateau_vie.grille[0][k].presenceVie() == false) {  // et si le joueur n'a pas toutes ces vies 
                                    plateau_vie.grille[0][k].Ajoutervie(); // on lui ajoute une vie 
                                    affichage_vie.repaint();
                                    avoirnbkit -= 1;  // on enlève un kit 
                                    nb_Kits.setText(avoirnbkit + "");
                                    break;
                                }
                            }
                        }
                        if (o.bombeCourant == true) {  // si le bouton cliqué est une bombe 
                            o.ExplosionBombe();  // on active la bombe
                            inter_déminage.repaint();  // on repeint l'interface
                            message.setText("Un Cell a explosé : Maître Kaioh n'est pas content"); // Affichage si le joueur fait exploser une bombe Cell

                            for (int i = 2; i >= 0; i--) {  // et on enlève une vie 
                                if (plateau_vie.grille[0][i].presenceVie() == true) {
                                    plateau_vie.grille[0][i].supprimervie();

                                    affichage_vie.repaint();
                                    break;

                                }
                            }
                            if (plateau_vie.grille[0][0].presenceVie() == false) { // Si notre joueur ne possède plus de vies alors c'est perdu
                                message.setText("Félicitations ! \n Vous avez réalisé l'immense exploit d'être \n plus inutile que Yamcha !!!"); // Affichage si le joueur perd 
                            }

                        } else if (o.avoirKit == true) {  // si le bouton cliqué est une kit
                            o.Usagekit();  // on utilise le kit 
                            inter_déminage.repaint();  // on repeint l'interface 
                            
                            for (int i = 2; i >= 0; i--) { // si le joueur n'a pas toutes ces vies on lui ajoute directement une vie 
                                if (plateau_vie.grille[0][i].presenceVie() == false) {
                                    plateau_vie.grille[0][i].Ajoutervie();
                                    affichage_vie.repaint();
                                    break;
                                } else {// sinon on lui ajoute 1 a son nombre de kits
                                    nbkit += 1;
                                    nb_Kits.setText(nbkit + "");
                                    break;
                                }
                            }
                        }
                        else {  // si le bouton cliqué n'est ni une bombe ni un kit 
                            
                           int t =  plateau.decouverteGrille(ligne , colonne, 4, 14);  // alors on cherche si il y a des bombes à proximité 
                           System.out.println(t);
                           if(t==1) { // si t =1 alors il y a une bombe autour de la case 
                               o.Boule1();  // dans ce cas on active la première boule pour afficher l'image voulu 
                               inter_déminage.repaint();
                           }
                           else if(t==0){ //idem si il n'y a pas de boule 
                               o.Boule0();
                               inter_déminage.repaint();
                           }
                           else if(t==2){
                              o.Boule2();
                              inter_déminage.repaint();
                           }else{
                              o.Boule3();
                              inter_déminage.repaint();
                           }
                           
                           
                        }

                    }
                });

                inter_déminage.add(CellGraph);
            }
        }
        inter_déminage.repaint(); // on rafraîchit l'affichage (sans devoir passer la souris 
        niveau3.setEnabled(false);
        niveau2.setEnabled(false);
        niveau1.setEnabled(false);
                


    }//GEN-LAST:event_niveau1ActionPerformed

    private void niveau2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_niveau2ActionPerformed
        // TODO add your handling code here:

        initComponents();

        // On a recopié le code pour 3 difficultés différentes ici mode normal
        //partie affiche le nombre de vie
        plateau_vie = new Grille(1, 3);//on creer un plateau_vie qui sert à placer les images de vie comme on a trois vie on creer une grille de 1 ligne et 3 colonne
        for (int i = 0; i < 3; i++) {//boucle pour placer les images dans le bon panel 
            Cellule_Graphique CellVie = new Cellule_Graphique(plateau_vie.grille[0][i]);
            affichage_vie.add(CellVie);
        }
        affichage_vie.repaint();

        int l = 6;
        int c = 17;
        Grille plateau = new Grille(l, c);
        placerBombes(plateau, l, c);
        placerKits(plateau, l, c);// onplace les kits de déminage
        inter_déminage.setLayout(new java.awt.GridLayout(l, c));

        for (int i = l - 1; i >= 0; i--) {//même principe que le plateau de vie mais avec deux boucle car le nombre de vie est variable 
            for (int j = 0; j < c; j++) {
                
                plateau.grille[i][j].supprimervie();
                Cellule_Graphique CellGraph = new Cellule_Graphique(plateau.grille[i][j]);
                int ligne = i ;
                int colonne = j;
                //Partie du code qui servira à faire des actions avec les boutons de la grille 
                CellGraph.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        Cellule o = CellGraph.CelluleAssociee;
                        
                        if (o.bombeCourant == true) {
                            o.ExplosionBombe();

                            int avoirnbkit = Integer.parseInt(nb_Kits.getText());
                            if (avoirnbkit != 0) {
                                for (int k = 2; k >= 0; k--) {
                                    if (plateau_vie.grille[0][k].presenceVie() == false) {
                                        plateau_vie.grille[0][k].Ajoutervie();
                                        affichage_vie.repaint();
                                        avoirnbkit -= 1;
                                        nb_Kits.setText(avoirnbkit + "");
                                        break;
                                    }
                                }
                            }
                            inter_déminage.repaint();
                            message.setText("Un Cell a explosé : Maître Kaioh n'est pas content"); // Affichage si le joueur fait exploser une bombe Cell

                            for (int i = 2; i >= 0; i--) {
                                if (plateau_vie.grille[0][i].presenceVie() == true) {
                                    plateau_vie.grille[0][i].supprimervie();

                                    affichage_vie.repaint();
                                    break;

                                }
                            }
                            if (plateau_vie.grille[0][0].presenceVie() == false) { // Si notre joueur ne possède plus de vies alors c'est perdu
                                message.setText("Félicitations ! \n Vous avez réalisé l'immense exploit d'être \n plus inutile que Yamcha !!!"); // Affichage si le joueur perd 
                            }

                        } else if (o.avoirKit == true) {
                            o.Usagekit();
                            o.supprimerKit();
                            inter_déminage.repaint();
                            
                            for (int i = 2; i >= 0; i--) {
                                if (plateau_vie.grille[0][i].presenceVie() == false) {
                                    plateau_vie.grille[0][i].Ajoutervie();
                                    affichage_vie.repaint();
                                    break;
                                } else {
                                    nbkit += 1;
                                    nb_Kits.setText(nbkit + "");
                                    break;
                                }
                            }
                        } else {
                            
                           int t =  plateau.decouverteGrille(ligne , colonne, 6, 17);
                           System.out.println(t);
                           if(t==1) {
                               o.Boule1();
                               inter_déminage.repaint();
                           }
                           else if(t==0){
                               o.Boule0();
                               inter_déminage.repaint();
                           }
                           else if(t==2){
                              o.Boule2();
                              inter_déminage.repaint();
                           }else{
                              o.Boule3();
                              inter_déminage.repaint();
                           }
                           
                           
                        }
                       

                    }
                });

                inter_déminage.add(CellGraph);
            }
        }
        inter_déminage.repaint(); // on rafraîchit l'affichage (sans devoir passer la souris 
        niveau3.setEnabled(false);
        niveau2.setEnabled(false);
        niveau1.setEnabled(false);
        
    }//GEN-LAST:event_niveau2ActionPerformed

    private void niveau3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_niveau3ActionPerformed
        // TODO add your handling code here:

        initComponents();

        // On a recopié le code pour 3 difficultés différentes ici mode difficile
        //partie affiche le nombre de vie
        plateau_vie = new Grille(1, 3);//on creer un plateau_vie qui sert à placer les images de vie comme on a trois vie on creer une grille de 1 ligne et 3 colonne
        for (int i = 0; i < 3; i++) {//boucle pour placer les images dans le bon panel 
            Cellule_Graphique CellVie = new Cellule_Graphique(plateau_vie.grille[0][i]);
            affichage_vie.add(CellVie);
        }
        affichage_vie.repaint();

        int l = 8;
        int c = 20;
        Grille plateau = new Grille(l, c);

        placerBombes(plateau, l, c);
        placerKits(plateau, l, c);
        inter_déminage.setLayout(new java.awt.GridLayout(l, c));

        for (int i = l - 1; i >= 0; i--) {//même principe que le plateau de vie mais avec deux boucle car le nombre de vie est variable 
            for (int j = 0; j < c; j++) {
                
                plateau.grille[i][j].supprimervie();
                Cellule_Graphique CellGraph = new Cellule_Graphique(plateau.grille[i][j]);
                int ligne =i ;
                int colonne = j;
                //Partie du code qui servira à faire des actions avec les boutons de la grille 
                CellGraph.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        
                        Cellule o = CellGraph.CelluleAssociee;
                        if (o.bombeCourant == true) {
                            o.ExplosionBombe();
                            int avoirnbkit = Integer.parseInt(nb_Kits.getText());
                            if (avoirnbkit != 0) {
                                for (int k = 2; k >= 0; k--) {
                                    if (plateau_vie.grille[0][k].presenceVie() == false) {
                                        plateau_vie.grille[0][k].Ajoutervie();
                                        affichage_vie.repaint();
                                        avoirnbkit -= 1;
                                        nb_Kits.setText(avoirnbkit + "");
                                        break;
                                    }
                                }
                            }
                            inter_déminage.repaint();

                            message.setText("Un Cell a explosé : Maître Kaioh n'est pas content"); // Affichage si le joueur fait exploser une bombe Cell

                            for (int i = 2; i >= 0; i--) {
                                if (plateau_vie.grille[0][i].presenceVie() == true) {
                                    plateau_vie.grille[0][i].supprimervie();

                                    affichage_vie.repaint();
                                    break;

                                }
                            }
                            if (plateau_vie.grille[0][0].presenceVie() == false) { // Si notre joueur ne possède plus de vies alors c'est perdu
                                message.setText("Félicitations ! \n Vous avez réalisé l'immense exploit d'être \n plus inutile que Yamcha !!!"); // Affichage si le joueur perd 
                            }

                        } else if (o.avoirKit == true) {
                            o.Usagekit();
                            inter_déminage.repaint();
                            

                            for (int i = 2; i >= 0; i--) {
                                if (plateau_vie.grille[0][i].presenceVie() == false) {
                                    plateau_vie.grille[0][i].Ajoutervie();
                                    affichage_vie.repaint();
                                    break;
                                } else {
                                    nbkit += 1;
                                    nb_Kits.setText(nbkit + "");
                                    break;
                                }
                            }
                        }
                        else {
                            
                           int t =  plateau.decouverteGrille(ligne , colonne, 8, 20);
                           
                           System.out.println(t);
                           if(t==1) {
                               o.Boule1();
                               inter_déminage.repaint();
                           }
                           else if(t==0){
                               o.Boule0();
                               int var=0;
                               int L = ligne;
                               int C = colonne;
                               while(var==0){ // création d'une boucle pour afficher les cases n'ayant acune bombe au dessus d'elle  
                                   L += 1 ;
                                   if (L> 7){  //si L depasse 8 alors on ne se trouev plus dans la grille 
                                       break;
                                   }
                                   int L1C0 = plateau.decouverteGrille(L , colonne,8, 20) ;
                                   
                                   
                                   if(L1C0 ==1){
                                       plateau.grille[L][colonne].Boule1();
                                       var=1;
                                   }else if (L1C0 ==0){
                                       plateau.grille[L][colonne].Boule0();
                                   }else if (L1C0 ==2){
                                       plateau.grille[L][colonne].Boule2();
                                       var = 1;
                                   }else if (L1C0 ==3){
                                       plateau.grille[L][colonne].Boule3();
                                       var = 1;
                                   }
                                   
                               }
                               var=0;
                               L = ligne;
                               C = colonne;
                               while(var==0){ // création d'une boucle pour afficher les cases n'ayant acune bombe au dessus d'elle  
                                   L -= 1 ;
                                   if (L< 0){  //si L depasse 8 alors on ne se trouev plus dans la grille 
                                       break;
                                   }
                                   int L1C0 = plateau.decouverteGrille(L , colonne,8, 20) ;
                                   
                                   
                                   if(L1C0 ==1){
                                       plateau.grille[L][colonne].Boule1();
                                       var=1;
                                   }else if (L1C0 ==0){
                                       plateau.grille[L][colonne].Boule0();
                                   }else if (L1C0 ==2){
                                       plateau.grille[L][colonne].Boule2();
                                       var = 1;
                                   }else if (L1C0 ==3){
                                       plateau.grille[L][colonne].Boule3();
                                       var = 1;
                                   }
                               }
                               
                               var=0;
                               L = ligne;
                               C = colonne;
                               while(var==0){ // création d'une boucle pour afficher les cases n'ayant acune bombe au dessus d'elle  
                                   C += 1 ;
                                   if (C== 20){  //si L depasse 8 alors on ne se trouev plus dans la grille 
                                       break;
                                   }
                                   int L1C0 = plateau.decouverteGrille(ligne , C,8, 20) ;
                                   if(L1C0 ==1){
                                       plateau.grille[ligne][C].Boule1();
                                       var=1;
                                   }else if (L1C0 ==0){
                                       plateau.grille[ligne][C].Boule0();
                                   }else if (L1C0 ==2){
                                       plateau.grille[ligne][C].Boule2();
                                       var = 1;
                                   }else if (L1C0 ==3){
                                       plateau.grille[ligne][C].Boule3();
                                       var = 1;
                                   } 
                               }
                               
                               var=0;
                               L = ligne;
                               C = colonne;
                               while(var==0){ // création d'une boucle pour afficher les cases n'ayant acune bombe au dessus d'elle  
                                   C -= 1 ;
                                   if (C<0){  //si L depasse 8 alors on ne se trouev plus dans la grille 
                                       break;
                                   }
                                   int L1C0 = plateau.decouverteGrille(ligne , C,8, 20) ;
                                  
                                   if(L1C0 ==1){
                                       plateau.grille[ligne][C].Boule1();
                                       var=1;
                                   }else if (L1C0 ==0){
                                       plateau.grille[ligne][C].Boule0();
                                   }else if (L1C0 ==2){
                                       plateau.grille[ligne][C].Boule2();
                                       var = 1;
                                   }else if (L1C0 ==3){
                                       plateau.grille[ligne][C].Boule3();
                                       var = 1;
                                   }
                                   
                               }
                               var=0;
                               L = ligne;
                               C = colonne;
                               while(var==0){ // création d'une boucle pour afficher les cases n'ayant acune bombe au dessus d'elle  
                                   C += 1 ;
                                   L +=1;
                                   
                                   if (C==20 || L>7 ){  //si L depasse 8 alors on ne se trouev plus dans la grille 
                                       break;
                                   }
                                   int L1C0 = plateau.decouverteGrille(L , C,8, 20);
                                   if(L1C0 ==1){
                                       plateau.grille[L][C].Boule1();
                                       var=1;
                                   }else if (L1C0 ==0){
                                       plateau.grille[L][C].Boule0();
                                   }else if (L1C0 ==2){
                                       plateau.grille[L][C].Boule2();
                                       var = 1;
                                   }else if (L1C0 ==3){
                                       plateau.grille[L][C].Boule3();
                                       var = 1;
                                   }   
                               }
                               
                               var=0;
                               L = ligne;
                               C = colonne;
                               while(var==0){ // création d'une boucle pour afficher les cases n'ayant acune bombe au dessus d'elle  
                                   C -= 1 ;
                                   L +=1;
                                   System.out.println(L);
                                   System.out.println(C); 
                                   if (C<0 || L>7 ){  //si L depasse 8 alors on ne se trouev plus dans la grille 
                                       break;
                                   }
                                   int L1C0 = plateau.decouverteGrille(L , C,8, 20) ;
                                   
                                   if(L1C0 ==1){
                                       plateau.grille[L][C].Boule1();
                                       var=1;
                                   }else if (L1C0 ==0){
                                       plateau.grille[L][C].Boule0();
                                   }else if (L1C0 ==2){
                                       plateau.grille[L][C].Boule2();
                                       var = 1;
                                   }else if (L1C0 ==3){
                                       plateau.grille[L][C].Boule3();
                                       var = 1;
                                   }
                                   
                               }
                                var=0;
                                L = ligne;
                                C = colonne;
                               while(var==0){ // création d'une boucle pour afficher les cases n'ayant acune bombe au dessus d'elle  
                                   C += 1 ;
                                   L -=1;
                                   if (C==20 || L<0 ){  //si L depasse 8 alors on ne se trouev plus dans la grille 
                                       break;
                                   }
                                   int L1C0 = plateau.decouverteGrille(L , C,8, 20) ;
                                 
                                   
                                   if(L1C0 ==1){
                                       plateau.grille[L][C].Boule1();
                                       var=1;
                                   }else if (L1C0 ==0){
                                       plateau.grille[L][C].Boule0();
                                   }else if (L1C0 ==2){
                                       plateau.grille[L][C].Boule2();
                                       var = 1;
                                   }else if (L1C0 ==3){
                                       plateau.grille[L][C].Boule3();
                                       var = 1;
                                   }
                                   
                               }
                                var=0;
                                L = ligne;
                                C = colonne;
                               while(var==0){ // création d'une boucle pour afficher les cases n'ayant acune bombe au dessus d'elle  
                                   C -= 1 ;
                                   L -=1;
                                   
                                   
                                   
                                   if (C<0 || L<0 ){  //si L depasse 8 alors on ne se trouev plus dans la grille 
                                       break;
                                   }
                                   int L1C0 = plateau.decouverteGrille(L , C,8, 20) ;
                                   System.out.println(L1C0);
                                   
                                   if(L1C0 ==1){
                                       plateau.grille[L][C].Boule1();
                                       var=1;
                                   }else if (L1C0 ==0){
                                       plateau.grille[L][C].Boule0();
                                   }else if (L1C0 ==2){
                                       plateau.grille[L][C].Boule2();
                                       var = 1;
                                   }else if (L1C0 ==3){
                                       plateau.grille[L][C].Boule3();
                                       var = 1;
                                   }
                                   
                               }
                               
                               var=0;
                               L = ligne;
                               C = colonne;
                               while(var==0){ // création d'une boucle pour afficher les cases n'ayant acune bombe au dessus d'elle  
                                   C -= 1 ;
                                   L +=1;
                                   if (C<0 || L==7 ){  //si L depasse 8 alors on ne se trouev plus dans la grille 
                                       break;
                                   }
                                   int L1C0 = plateau.decouverteGrille(L , C,8, 20) ;
                                  
                                   if(L1C0 ==1){
                                       plateau.grille[L][C].Boule1();
                                       var=1;
                                   }else if (L1C0 ==0){
                                       plateau.grille[L][C].Boule0();
                                   }else if (L1C0 ==2){
                                       plateau.grille[L][C].Boule2();
                                       var = 1;
                                   }else if (L1C0 ==3){
                                       plateau.grille[L][C].Boule3();
                                       var = 1;
                                   }
                                   
                               }
                               
                               
                               
                               
                               
                               
                               inter_déminage.repaint();
                           }
                           else if(t==2){
                              o.Boule2();
                              inter_déminage.repaint();
                           }else{
                              o.Boule3();
                              inter_déminage.repaint();
                           }
                           
                           
                        }

                    }
                });

                inter_déminage.add(CellGraph);
            }
        }
        inter_déminage.repaint(); // on rafraîchit l'affichage (sans devoir passer la souris 
        niveau3.setEnabled(false);
        niveau2.setEnabled(false);
        niveau1.setEnabled(false);
        

    }//GEN-LAST:event_niveau3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fenêtre_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fenêtre_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fenêtre_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fenêtre_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fenêtre_interface().setVisible(true);
            }
        });
    }

    public void placerBombes(Grille plateau, int l, int c) {// Méthode nous permettant de placer des bombes aléatoirement sur notre plateau
        int nbMax = 0;
        nbMax = (l * c) / (l);
        for (int i = 0; i < nbMax; i++) {
            int j = 0;
            while (j == 0) {
                int x = (int) (Math.random() * (l + 3 - 3));// on choisit une valeur aléatoire
                int y = (int) (Math.random() * (c + 3 - 3));//idem
                if (plateau.presenceBombe(x, y) == false) {
                    j = 1;
                    plateau.placerBombe(x, y);
                }
            }

        }
    }

    public void placerKits(Grille plateau, int l, int c) {// Méthode nous permettant de placer des Kits de déminages aléatoirement sur notre plateau

        for (int i = 0; i < 4; i++) {
            int j = 0;
            while (j == 0) {
                int x = (int) (Math.random() * (l + 3 - 3));// on choisit une valeur aléatoire
                int y = (int) (Math.random() * (c + 3 - 3));//idem
                if (plateau.presenceKit(x, y) == false && plateau.presenceBombe(x, y) == false) {
                    j = 1;
                    plateau.placagedeKit(x, y);
                }
            }

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Infos_joueur;
    private javax.swing.JPanel affichage_vie;
    private javax.swing.JLabel infosJeu_Title;
    private javax.swing.JLabel infosJoueur_Title;
    private javax.swing.JPanel infos_Jeu;
    private javax.swing.JPanel inter_déminage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea message;
    private javax.swing.JLabel nb_Kits;
    private javax.swing.JLabel nb_Mines;
    private javax.swing.JButton niveau1;
    private javax.swing.JButton niveau2;
    private javax.swing.JButton niveau3;
    private javax.swing.JTextField nom_joueur1;
    private javax.swing.JLabel txt_Joueur;
    private javax.swing.JLabel txt_NbMines;
    private javax.swing.JLabel txt_Nbkits;
    private javax.swing.JLabel txt_Taille;
    private javax.swing.JLabel txt_Vies;
    // End of variables declaration//GEN-END:variables

}
